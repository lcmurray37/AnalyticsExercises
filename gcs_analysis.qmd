---
title: "Ground Combat Systems (GCS) Analysis"
format: html
editor: visual
---

# Objective

## Programs of Interest

Illuminate what the potential client Department spent on the following major Ground Combat Systems (GCS) programs:

-   Abrams tank (e.g., M1A1)
-   Bradley fighting vehicle (e.g., M2A1)
-   Stryker armored personnel carrier (e.g., M1130)

## Analysis Requirements

Produce an analysis of FY16 through FY20 federal contract data for these programs:

-   Summarize prominent vendors, funding/contracting offices, and agencies
-   Outline key technologies, products, and services acquired
-   Increase understanding of what future acquisitions for each of these programs may look like given:
    -   Where they are in their life cycles
    -   What potential risks may be associated with the management of the programs

## Analysis Structure

1)  Solutions to the following pain points the potential client has previously encountered in their data, including:

-   Vendor name normalization
-   Misidentified or unidentified GCS contracts and vendors

2)  Assessment of the following:

-   Spending trends
-   Key technologies
-   Programs
-   Vendors
-   Any other elements interesting about the market (e.g., current acquisition life cycle status of the GCS programs and what it means for future investments; or past/future federal budget alignment within each program).

3)  Assessment should include:

-   Conclusion with key takeaways
-   Conclusion with 1-2 interesting insights that potential client can use to inform their acquisition decisions

4)  Commented-code or a short summary of methodology used to clean/normalize, organize, and/or transform the data.

# Parameters

## Library

```{r}
# packages for data manipulation
library(dplyr)
library(openxlsx2)
library(purrr)
library(stringr)

# packages required to access usaspending api
library(httr2)
library(jsonlite)

# source anonymous functions
source(paste0(getwd(), "/functions/clean.R"))
```

## File Location

```{r}
dir_path <- paste0("/Users/", Sys.info()["user"], "/R/DATA/")
file_name <- "ground_vehicles.xlsx"
data_location <- file.path(dir_path, file_name)
```

# Read Data

```{r}
ground_vehicles <- read_xlsx(data_location)
View(ground_vehicles)
```

# Contract Information and Validation USASpending API

## Background

The USAspending API (Application Programming Interface) allows the public to access comprehensive U.S. government spending data ([read more](https://api.usaspending.gov/)). This example 

## Identify Contract/DOs

```{r}
unique_ids <- ground_vehicles %>% 
  select("contractnumber" = 2, "deliveryorder" = 3) %>% 
  mutate(across(everything(), ~ remove_non_alphanumeric(.x))) %>% 
  unique()
```

## Convert list to API call format

```{r}
# use ananymous function 
combined_list <- format_contract_numbers(unique_ids)
combined_list <- lapply(combined_list, na.omit)

# convert list to vectors
contract_num_formatted <- combined_list[1] %>% 
  unlist() %>% 
  unique()

contract_num_do_formatted <- combined_list[2] %>% 
  unlist() %>% 
  unique()

# splice list, due to time-out error
con_tenths <- splice_into_tenths(contract_num_formatted)
do_tenths <- splice_into_tenths(contract_num_do_formatted)
```

## Grab Contract data without DOs

```{r}
# initialize list
final_con_list <- list()
```

```{r}
final_con_list$tenth1 <- transactions_request(con_tenths$tenth1)
```

```{r}
final_con_list$tenth2 <- transactions_request(con_tenths$tenth2)
```

```{r}
final_con_list$tenth3 <- transactions_request(con_tenths$tenth3)
```

```{r}
final_con_list$tenth4 <- transactions_request(con_tenths$tenth4)
```

```{r}
final_con_list$tenth5 <- transactions_request(con_tenths$tenth5)
```

```{r}
final_con_list$tenth6 <- transactions_request(con_tenths$tenth5)
```

```{r}
final_con_list$tenth7 <- transactions_request(con_tenths$tenth7)
```

```{r}
final_con_list$tenth8 <- transactions_request(con_tenths$tenth8)
```

```{r}
final_con_list$tenth9 <- transactions_request(con_tenths$tenth9)
```

```{r}
final_con_list$tenth10 <- transactions_request(con_tenths$tenth10)
```

```{r}
test <- extract_results(final_con_list)
```